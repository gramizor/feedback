// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/feedback/{id}": {
            "get": {
                "description": "Возвращает информацию об опросе по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Опрос"
                ],
                "summary": "Получение опроса по идентификатору",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор опроса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об опросе",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "400": {
                        "description": "Недопустимый идентификатор опроса",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    }
                }
            }
        },
        "/feedback/{id}/delete": {
            "delete": {
                "description": "Удаляет опрос по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Опрос"
                ],
                "summary": "Удаление опроса",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор опроса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Начало даты формирования",
                        "name": "startFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Конец даты формирования",
                        "name": "endFormationDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Статус опроса",
                        "name": "feedbackStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackRequest"
                        }
                    },
                    "400": {
                        "description": "Недопустимый идентификатор опроса",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackRequest"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackRequest"
                        }
                    }
                }
            }
        },
        "/feedback/{id}/status": {
            "put": {
                "description": "Обновляет статус опроса для модератора по идентификатору опроса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Опрос"
                ],
                "summary": "Обновление статуса опроса для модератора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор опроса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новый статус опроса",
                        "name": "feedbackStatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackUpdateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об опросе",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "400": {
                        "description": "Недопустимый идентификатор опроса или ошибка чтения JSON объекта",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    }
                }
            }
        },
        "/feedback/{id}/user": {
            "put": {
                "description": "Обновляет статус опроса для пользователя по идентификатору опроса",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Опрос"
                ],
                "summary": "Обновление статуса опроса для пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор опроса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об опросе",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "400": {
                        "description": "Недопустимый идентификатор опроса",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.FeedbackGetResponse"
                        }
                    }
                }
            }
        },
        "/group": {
            "get": {
                "description": "Возращает список всех активных групп",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Получение списка групп",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/group/create": {
            "post": {
                "description": "Создает новую группу с предоставленными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Создание новой группы",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/group/paginate": {
            "get": {
                "description": "Возвращает список всех активных групп с использованием пагинации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Получение списка групп с пагинацией",
                "parameters": [
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "email",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "email",
                        "description": "Размер страницы",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/group/{group_id}": {
            "get": {
                "description": "Возвращает информацию о группе по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Получение группы по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о группе",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        },
        "/group/{group_id}/delete": {
            "delete": {
                "description": "Удаляет группу по ее ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Удаление группы",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/group/{group_id}/feedback": {
            "post": {
                "description": "Добавляет группу к опросу по ее ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Добавление группы к опросу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/group/{group_id}/image": {
            "post": {
                "description": "Добавляет изображение к группе по его ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Добавление изображения к группе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображение группы",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        },
        "/group/{group_id}/update": {
            "put": {
                "description": "Обновляет информацию о группе по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Обновление информации о группе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о группе",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.Group"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/feedback": {
            "post": {
                "description": "Удаляет группу из опроса по ее ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Группа"
                ],
                "summary": "Удаление группы из опроса",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID группы",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "email",
                        "description": "Код группы",
                        "name": "groupCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список групп",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.GroupsGetResponse"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Получение данных пользователя по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить пользователя по идентификатору",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Авторизация пользователя и генерация JWT-токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Выход пользователя из системы и удаление токена из куков",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Выход пользователя",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрация нового пользователя с предоставленной информацией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Регистрация нового пользователя.",
                "parameters": [
                    {
                        "description": "Пользовательский объект в формате JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно зарегистрированный пользователь",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.FeedbackGetResponse": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "feedback_id": {
                    "type": "integer"
                },
                "feedback_status": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Group"
                    }
                }
            }
        },
        "model.FeedbackRequest": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "feedback_id": {
                    "type": "integer"
                },
                "feedback_status": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "model.FeedbackUpdateStatusRequest": {
            "type": "object",
            "properties": {
                "feedback_status": {
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "object",
            "properties": {
                "contacts": {
                    "type": "string",
                    "example": "+7(999)999-99-99"
                },
                "course": {
                    "type": "integer",
                    "example": 1
                },
                "group_code": {
                    "type": "string",
                    "example": "RT5-51B"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_status": {
                    "type": "string",
                    "example": "обучается"
                },
                "photo": {
                    "type": "string",
                    "example": "http://example.com/group.jpg"
                },
                "students": {
                    "type": "integer",
                    "example": 23
                }
            }
        },
        "model.GroupsGetResponse": {
            "type": "object",
            "properties": {
                "feedback_id": {
                    "type": "integer",
                    "example": 1
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Group"
                    }
                }
            }
        },
        "model.Role": {
            "type": "string",
            "enum": [
                "пользователь",
                "модератор"
            ],
            "x-enum-varnames": [
                "UserRole",
                "ModeratorRole"
            ]
        },
        "model.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
