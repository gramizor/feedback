definitions:
  model.FeedbackGetResponse:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      feedback_id:
        type: integer
      feedback_status:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
      groups:
        items:
          $ref: '#/definitions/model.Group'
        type: array
    type: object
  model.FeedbackRequest:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      feedback_id:
        type: integer
      feedback_status:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
    type: object
  model.FeedbackUpdateStatusRequest:
    properties:
      feedback_status:
        type: string
    type: object
  model.Group:
    properties:
      contacts:
        example: +7(999)999-99-99
        type: string
      course:
        example: 1
        type: integer
      group_code:
        example: RT5-51B
        type: string
      group_id:
        type: integer
      group_status:
        example: обучается
        type: string
      photo:
        example: http://example.com/group.jpg
        type: string
      students:
        example: 23
        type: integer
    type: object
  model.GroupsGetResponse:
    properties:
      feedback_id:
        example: 1
        type: integer
      groups:
        items:
          $ref: '#/definitions/model.Group'
        type: array
    type: object
  model.Role:
    enum:
    - пользователь
    - модератор
    type: string
    x-enum-varnames:
    - UserRole
    - ModeratorRole
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.Role'
      user_id:
        type: integer
    type: object
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /feedback/{id}:
    get:
      description: Возвращает информацию об опросе по её идентификатору
      parameters:
      - description: Идентификатор опроса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация об опросе
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "400":
          description: Недопустимый идентификатор опроса
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
      summary: Получение опроса по идентификатору
      tags:
      - Опрос
  /feedback/{id}/delete:
    delete:
      description: Удаляет опрос по её идентификатору
      parameters:
      - description: Идентификатор опроса
        in: path
        name: id
        required: true
        type: integer
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус опроса
        format: email
        in: query
        name: feedbackStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.FeedbackRequest'
        "400":
          description: Недопустимый идентификатор опроса
          schema:
            $ref: '#/definitions/model.FeedbackRequest'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FeedbackRequest'
      summary: Удаление опроса
      tags:
      - Опрос
  /feedback/{id}/status:
    put:
      description: Обновляет статус опроса для модератора по идентификатору опроса
      parameters:
      - description: Идентификатор опроса
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус опроса
        in: body
        name: feedbackStatus
        required: true
        schema:
          $ref: '#/definitions/model.FeedbackUpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "400":
          description: Недопустимый идентификатор опроса или ошибка чтения JSON объекта
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
      summary: Обновление статуса опроса для модератора
      tags:
      - Опрос
  /feedback/{id}/user:
    put:
      description: Обновляет статус опроса для пользователя по идентификатору опроса
      parameters:
      - description: Идентификатор опроса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "400":
          description: Недопустимый идентификатор опроса
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.FeedbackGetResponse'
      summary: Обновление статуса опроса для пользователя
      tags:
      - Опрос
  /group:
    get:
      description: Возращает список всех активных групп
      parameters:
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Получение списка групп
      tags:
      - Группа
  /group/{group_id}:
    get:
      description: Возвращает информацию о группе по его ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о группе
          schema:
            $ref: '#/definitions/model.Group'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Group'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Group'
      summary: Получение группы по ID
      tags:
      - Группа
  /group/{group_id}/delete:
    delete:
      description: Удаляет группу по ее ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Удаление группы
      tags:
      - Группа
  /group/{group_id}/feedback:
    post:
      description: Добавляет группу к опросу по ее ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Добавление группы к опросу
      tags:
      - Группа
  /group/{group_id}/image:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к группе по его ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      - description: Изображение группы
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Group'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Group'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Group'
      summary: Добавление изображения к группе
      tags:
      - Группа
  /group/{group_id}/update:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о группе по ее ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о группе
          schema:
            $ref: '#/definitions/model.Group'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Group'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Group'
      summary: Обновление информации о группе
      tags:
      - Группа
  /group/create:
    post:
      consumes:
      - application/json
      description: Создает новую группу с предоставленными данными
      parameters:
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Создание новой группы
      tags:
      - Группа
  /group/paginate:
    get:
      description: Возвращает список всех активных групп с использованием пагинации
      parameters:
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      - description: Номер страницы
        format: email
        in: query
        name: page
        type: integer
      - description: Размер страницы
        format: email
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Получение списка групп с пагинацией
      tags:
      - Группа
  /groups/{group_id}/feedback:
    post:
      description: Удаляет группу из опроса по ее ID
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: integer
      - description: Код группы
        format: email
        in: query
        name: groupCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список групп
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.GroupsGetResponse'
      summary: Удаление группы из опроса
      tags:
      - Группа
  /user/:
    get:
      description: Получение данных пользователя по его идентификатору
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пользователя по идентификатору
  /user/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя и генерация JWT-токена
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - Пользователь
  /user/logout:
    post:
      description: Выход пользователя из системы и удаление токена из куков
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выход пользователя
      tags:
      - Пользователь
  /user/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с предоставленной информацией.
      parameters:
      - description: Пользовательский объект в формате JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно зарегистрированный пользователь
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Регистрация нового пользователя.
      tags:
      - Пользователь
swagger: "2.0"
